{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/14h/Documents/void/abdallah.dev/components/canvas.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nexport var Canvas = function Canvas(props) {\n  _s();\n\n  var canvasRef = useRef(null);\n\n  var draw = function draw(ctx, frameCount) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000'; // ctx.beginPath();\n\n    ctx.arc(ctx.canvas.width / 2, ctx.canvas.height / 2, 500 * Math.pow(Math.sin(frameCount * 0.005), 2), 0, 2 * Math.PI); // ctx.fill();\n\n    ctx.stroke();\n  };\n\n  useEffect(function () {\n    var canvas = canvasRef.current;\n    var context = canvas.getContext('2d');\n    var frameCount = 0;\n    var animationFrameId; //Our draw came here\n\n    var render = function render() {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return function () {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return __jsx(\"canvas\", _extends({\n    ref: canvasRef\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }));\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/14h/Documents/void/abdallah.dev/components/canvas.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","draw","ctx","frameCount","clearRect","canvas","width","height","fillStyle","arc","Math","sin","PI","stroke","current","context","getContext","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA;;AAE3B,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,MAAMK,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,UAAN,EAAqB;AAC9BD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBF,GAAG,CAACG,MAAJ,CAAWC,KAA/B,EAAsCJ,GAAG,CAACG,MAAJ,CAAWE,MAAjD;AACAL,IAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB,CAF8B,CAG9B;;AACAN,IAAAA,GAAG,CAACO,GAAJ,CACIP,GAAG,CAACG,MAAJ,CAAWC,KAAX,GAAmB,CADvB,EAEIJ,GAAG,CAACG,MAAJ,CAAWE,MAAX,GAAoB,CAFxB,EAGI,eAAMG,IAAI,CAACC,GAAL,CAASR,UAAU,GAAG,KAAtB,CAAN,EAAsC,CAAtC,CAHJ,EAII,CAJJ,EAKI,IAAIO,IAAI,CAACE,EALb,EAJ8B,CAW9B;;AACAV,IAAAA,GAAG,CAACW,MAAJ;AACH,GAbD;;AAeAhB,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMQ,MAAM,GAAGL,SAAS,CAACc,OAAzB;AACA,QAAMC,OAAO,GAAGV,MAAM,CAACW,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIb,UAAU,GAAG,CAAjB;AACA,QAAIc,gBAAJ,CALY,CAOZ;;AACA,QAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBf,MAAAA,UAAU;AACVF,MAAAA,IAAI,CAACc,OAAD,EAAUZ,UAAV,CAAJ;AACAc,MAAAA,gBAAgB,GAAGE,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAnB;AACH,KAJD;;AAKAA,IAAAA,MAAM;AAEN,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACE,oBAAP,CAA4BJ,gBAA5B;AACH,KAFD;AAGH,GAlBQ,EAkBN,CAAChB,IAAD,CAlBM,CAAT;AAoBA,SAAO;AAAQ,IAAA,GAAG,EAAED;AAAb,KAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAxCM;;GAAMD,M;;KAAAA,M","sourcesContent":["import React, {useRef, useEffect} from 'react'\n\nexport const Canvas = props => {\n\n    const canvasRef = useRef(null);\n\n    const draw = (ctx, frameCount) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.fillStyle = '#000000';\n        // ctx.beginPath();\n        ctx.arc(\n            ctx.canvas.width / 2,\n            ctx.canvas.height / 2,\n            500 * Math.sin(frameCount * 0.005) ** 2,\n            0,\n            2 * Math.PI\n        );\n        // ctx.fill();\n        ctx.stroke();\n    }\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        let frameCount = 0;\n        let animationFrameId;\n\n        //Our draw came here\n        const render = () => {\n            frameCount++;\n            draw(context, frameCount);\n            animationFrameId = window.requestAnimationFrame(render);\n        }\n        render();\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId);\n        };\n    }, [draw]);\n\n    return <canvas ref={canvasRef} {...props}/>;\n}\n"]},"metadata":{},"sourceType":"module"}